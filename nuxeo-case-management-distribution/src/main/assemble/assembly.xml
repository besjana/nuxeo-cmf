<project name="nuxeo-assembly" default="build" xmlns:nx="urn:nuxeo-build"
  xmlns:artifact="urn:nuxeo-artifact">

  <taskdef resource="org/nuxeo/build/antlib.xml" uri="urn:nuxeo-build" />
  <taskdef resource="org/nuxeo/build/artifact/antlib.xml"
    uri="urn:nuxeo-artifact" />

  <filterset id="filter-resources">
    <filter token="nuxeo.core.version" value="${nuxeo.core.version}" />
  </filterset>

  <target name="init" unless="init.done">
    <property name="outdir" value="${maven.project.build.directory}" />
    <property name="stagedir" value="${outdir}/stage" />
    <property name="finaltarget" value="../target" />
  </target>

  <target name="init-server" depends="init" if="maven.profile.server">
    <property name="distribution" value="server" />
    <property name="distrib.key" value="org.nuxeo.ecm.distribution:nuxeo-distribution-jboss:${nuxeo.platform.version}:zip" />
    <property name="distrib.classifier" value="nuxeo-dm" />
    <property name="app.path" value="${stagedir}/nuxeo-cm-server" />
    <property name="bundles.dir" value="${app.path}/server/default/deploy/nuxeo.ear/bundles" />
    <property name="plugins.dir" value="${app.path}/server/default/deploy/nuxeo.ear/plugins" />
    <property name="config.dir" value="${app.path}/server/default/deploy/nuxeo.ear/config" />
    <property name="deploy.dir" value="server/default/deploy/nuxeo.ear" />
    <antcall target="expand" />
    <property name="init.done" value="true" />
  </target>

  <target name="init-tomcat" depends="init" if="maven.profile.tomcat">
    <property name="distribution" value="tomcat" />
    <property name="distrib.key" value="org.nuxeo.ecm.distribution:nuxeo-distribution-tomcat:${nuxeo.platform.version}:zip" />
    <property name="distrib.classifier" value="nuxeo-dm" />
    <property name="app.path" value="${stagedir}/nuxeo-cm-tomcat" />
    <property name="bundles.dir" value="${app.path}/nxserver/bundles" />
    <property name="plugins.dir" value="${app.path}/nxserver/plugins" />
    <property name="config.dir" value="${app.path}/nxserver/config" />
    <property name="deploy.dir" value="nxserver" />
    <antcall target="expand" />
    <property name="init.done" value="true" />
  </target>

  <target name="build">
    <antcall target="cleanoutput" />
    <antcall target="server" />
  </target>

  <target name="expand" unless="no.build">
    <artifact:expand depth="3" />
  </target>

  <target name="cleanoutput">
    <delete dir="${finaltarget}" />
  </target>

  <target name="build-server" depends="init-tomcat,init-server" description="Server packaging" if="distribution">
    <echo>nuxeo-cm-distribution server build ${build.distrib}...</echo>
    <mkdir dir="${stagedir}" />
    <unzip dest="${stagedir}">
      <artifact:resolveFile key="${distrib.key}"
                            classifier="${distrib.classifier}" />
      <patternset>
        <exclude name="**/templates/common-sfsl/**" />
        <exclude name="**/templates/stateful/**" />
        <exclude name="**/templates/stateless/**" />
      </patternset>
    </unzip>
    <nx:rename from="${stagedir}/nuxeo-*" to="${app.path}" />
    <chmod dir="${app.path}" perm="750" includes="*.sh,bin/*.sh,bin/nuxeoctl" />
    <!-- remove open social -->
    <delete failonerror="false" verbose="true">
      <fileset dir="${bundles.dir}"
        includes="nuxeo-opensocial-*"/> 
      <fileset dir="${bundles.dir}"
         includes="nuxeo-spaces-*"/>
      <fileset dir="${bundles.dir}"
         includes="nuxeo-webengine-gadgets-*"/>
      <fileset dir="${app.path}/templates/common/config"
        includes="opensocial.properties default-opensocial-config.xml" />
    </delete>
    <!-- Deploy Custom plugins -->
    <copy todir="${plugins.dir}">
      <artifact:set groupId="org.nuxeo.cm" type="jar" />
      <artifact:set groupId="org.nuxeo.ecm.platform" artifactId="nuxeo-classification-*"/>
      <artifact:set groupId="org.nuxeo.ecm.platform" artifactId="nuxeo-platform-importer-core"/>
      <artifact:set groupId="org.nuxeo.ecm.platform" artifactId="nuxeo-platform-document-routing-*"/>
    </copy>
    <!-- Deploy custom configuration -->
    <copy todir="${app.path}/templates/" overwrite="true">
      <fileset dir="src/main/resources" />
    </copy>
    <echo file="${app.path}/templates/nuxeo.defaults" append="yes" message="${line.separator}#include cmf${line.separator}nuxeo.templates=default,cmf" /> 
    <echo file="${app.path}/templates/cmf/nuxeo.defaults" append="yes" message="${line.separator}cmf.target=${deploy.dir}" /> 
    <antcall target="zip" />
  </target>

  <target name="zip">
    <zip
       destfile="${outdir}/${maven.project.artifactId}-${maven.project.version}-${distribution}.zip"
       basedir="${stagedir}" />
    <echo>Distribution built:
      ${outdir}/${maven.project.artifactId}-${maven.project.version}-${distribution}.zip</echo>
    <artifact:attach file="${outdir}/${maven.project.artifactId}-${maven.project.version}-${distribution}.zip" classifier="${distribution}" type="zip" target="${maven.project.groupId}:${maven.project.artifactId}" />                                                                                                                                                               
  </target>

  <target name="run-tomcat" depends="init-tomcat" if="maven.profile.tomcat">
    <antcall target="build-server" />
  </target>

  <target name="run-server" depends="init-server" if="maven.profile.server">
    <antcall target="build-server" />
  </target>

  <target name="server">
    <antcall target="run-tomcat" />
    <antcall target="run-server" />
  </target>
</project>
